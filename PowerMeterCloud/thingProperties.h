// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

const char DEVICE_LOGIN_NAME[]  = "b0cc8f4e-93de-4c9a-ac1b-19949d46a1ad";

const char SSID[]               = SECRET_SSID;    // Network SSID (name)
const char PASS[]               = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)
const char DEVICE_KEY[]  = SECRET_DEVICE_KEY;    // Secret device password

void onCusagelimChange();
void onCscreentimeoutChange();
void onCvoltHighChange();
void onCvoltLowChange();
void onCpowerswitchChange();

CloudElectricCurrent ccurrent;
CloudElectricPotential cvoltage;
float cenergy;
float cpF;
float cusagelim;
CloudFrequency cfrequency;
int cscreentimeout;
int cvoltHigh;
int cvoltLow;
CloudPower cpower;
bool cpowerswitch;
bool cstatus;
bool cstatus2;
bool cstatus3;
bool cvoltHight;
bool cvoltLowt;

void initProperties(){

  ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
  ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
  ArduinoCloud.addProperty(ccurrent, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cvoltage, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cenergy, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cpF, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cusagelim, READWRITE, ON_CHANGE, onCusagelimChange);
  ArduinoCloud.addProperty(cfrequency, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cscreentimeout, READWRITE, ON_CHANGE, onCscreentimeoutChange);
  ArduinoCloud.addProperty(cvoltHigh, READWRITE, ON_CHANGE, onCvoltHighChange);
  ArduinoCloud.addProperty(cvoltLow, READWRITE, ON_CHANGE, onCvoltLowChange);
  ArduinoCloud.addProperty(cpower, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cpowerswitch, READWRITE, ON_CHANGE, onCpowerswitchChange);
  ArduinoCloud.addProperty(cstatus, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cstatus2, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cstatus3, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cvoltHight, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(cvoltLowt, READ, ON_CHANGE, NULL);

}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
